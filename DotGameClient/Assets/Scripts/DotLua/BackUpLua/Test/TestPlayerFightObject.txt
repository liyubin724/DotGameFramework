require "Game/Core/Fight/FightObjectBase"

TestPlayerFightObject = Class(FightObjectBase,function(self)

end)


function TestPlayerFightObject:DoAwake()
  -- self:LoadSkeleton("Assets/Resources/Character/Player/Test01/ch_pc_hou_004_skeleton.prefab");
  -- self:LoadAvatarParts({"Assets/Resources/Character/Player/Test01/ch_pc_hou_004_jiao_part.asset","Assets/Resources/Character/Player/Test01/ch_pc_hou_004_shen_part.asset",
  -- "Assets/Resources/Character/Player/Test01/ch_pc_hou_004_shou_part.asset","Assets/Resources/Character/Player/Test01/ch_pc_hou_004_tou_part.asset"})

  self:LoadSkeletonAsync("Assets/Resources/Character/Player/Test01/ch_pc_hou_004_skeleton.prefab")
end

function TestPlayerFightObject:OnSkeletonLoadFinish(assetIndex)
  self:LoadAvatarPartsAsync({"Assets/Resources/Character/Player/Test01/ch_pc_hou_004_jiao_part.asset","Assets/Resources/Character/Player/Test01/ch_pc_hou_004_shen_part.asset",
                              "Assets/Resources/Character/Player/Test01/ch_pc_hou_004_shou_part.asset","Assets/Resources/Character/Player/Test01/ch_pc_hou_004_tou_part.asset"})
end

function TestPlayerFightObject:OnAvatarPartsFinish(assetIndex)
  print("FFF"..tostring(assetIndex))

  self.unloadPartTimerData = TimerData(5,5,nil,nil,{owner = self,func = TestPlayerFightObject.OnTimerOverToUnload})
  TimerManager.AddTimer(self.unloadPartTimerData)
end

function TestPlayerFightObject:OnTimerOverToUnload()
  self:UnloadAvatarAllParts()
end
