LuaNetPackHandler = {}

--道具使用
function LuaNetPackHandler.UseItemRequestResponse(itemId, useCount)
    print("UseItemRequestResponse", itemId, useCount)
    if not itemId or itemId ==0 then
        return
    end
    useCount = useCount or 1
    local netMgr = LuaGameManager.GetInstance():GetNetMgr()
    netMgr:RequestWithTable(LuaNetMessageDef.ID_GAME_USE_ITEM_REQUEST,{amount = useCount,useItemId=itemId},function (req,resp,err)
        -- local modelMgr = LuaGameManager.GetInstance():GetModelMgr()
        -- local rewardsData = modelMgr:GetDataByKeys("data","rewards")
        local rewardsData = resp["data"]["rewards"]
        print(table.tostring(rewardsData))
        if not rewardsData then
            return
        end
        local congratulationMgr = LuaGameManager.GetInstance():GetLogicMgr():GetCongratulationMgr()
        congratulationMgr:OnReceiveData(rewardsData)
    end)
end

--道具出售
function LuaNetPackHandler.SaleItemRequestResponse(saleId,saleCount)
    if not saleId or saleId ==0 then
        return
    end
    saleCount = saleCount or 1
    local netMgr = LuaGameManager.GetInstance():GetNetMgr()
    netMgr:RequestWithTable(LuaNetMessageDef.ID_GAME_SALE_ITEM_REQUEST,
    {sellItemId=saleId,amount=saleCount},function(req,resp,err)
        --trigger update pack data
    end)
end

--道具合成
function LuaNetPackHandler.CompoundItemRequestResponse(itemId, composeCount)
    if not itemId or itemId ==0 then
        return
    end
    composeCount = composeCount or 1
    local netMgr = LuaGameManager.GetInstance():GetNetMgr()
    netMgr:RequestWithTable(LuaNetMessageDef.ID_GAME_COMPOUND_ITEM_REQUEST,
    {itemId  = itemId, composeCount = composeCount},function(req,resp,err)
        --trigger update pack data
        local rewardsData = resp["data"]["rewards"]
        print(table.tostring(rewardsData))
        if not rewardsData then
            return
        end
        local congratulationMgr = LuaGameManager.GetInstance():GetLogicMgr():GetCongratulationMgr()
        congratulationMgr:OnReceiveData(rewardsData)
    end)
end

--多选道具
function LuaNetPackHandler.SelectreWardtemRequestResponse(itemId, chooseId, openNum)
    if not itemId or itemId ==0 then
        return
    end
    local netMgr = LuaGameManager.GetInstance():GetNetMgr()
    netMgr:RequestWithTable(LuaNetMessageDef.ID_GAME_USE_ITEM_BOX_REQUEST,
    {itemId = itemId, chooseId = chooseId - 1, openNum = openNum},function(req,resp,err)
        --trigger update pack data
        local rewardsData = resp["data"]["rewards"]
        print(table.tostring(rewardsData))
        if not rewardsData then
            return
        end
        local congratulationMgr = LuaGameManager.GetInstance():GetLogicMgr():GetCongratulationMgr()
        congratulationMgr:OnReceiveData(rewardsData)
    end)
end
