local ItemConfig = require "DataConfig/Item"
ConfirmManager = Class(function(self)
    self._itemId = 0
    self._itemCount = 0
    self._callBack = nil
end)

--private func
function ConfirmManager:DoReset()
    self._itemId = 0
    self._itemCount = 0
    self._callBack = nil
end

function ConfirmManager:DoDispose()
    self._itemId = nil
    self._itemCount = nil
    self._callBack = nil
end

--public func
function ConfirmManager:OnReceiveData(itemId,count,callBack)
    if not itemId then
        return
    end
    if self._itemId ~= itemId then
        self._itemId = itemId
    end
    self._itemCount = count or 1
    if callBack then
        self._callBack = callBack
    end
    local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
    uiMgr:OpenPanel("ConfirmPanel",GameConstValue.NameUIConfirmPanelPath,LuaUIPanelLevel.Top,LuaUIPanelRelation.Exclusion)
end

function ConfirmManager:GetData()
    local itemData = ItemConfig[self._itemId]
    if itemData then
        local str = string.format("将要出售%sx%d,总价格为%d金币，是否出售？",itemData.name,self._itemCount,self._itemCount*itemData.sellnumber)
        return str
    end
    return ""
end

function ConfirmManager:GetSaleItemId()
    return self._itemId
end

function ConfirmManager:GetSaleAmount()
    return self._itemCount
end

function ConfirmManager:Confirm()
    if not self._itemId or self._itemId == 0 then
        return
    end
    if self._callBack then
        self._callBack()
        self._callBack = nil
    end
    local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
    uiMgr:ClosePanel("ConfirmPanel",LuaUIPanelLevel.Top)
end