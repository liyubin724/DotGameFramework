StoreController = Class(function(self)
        self.storeMgr = LuaGameManager.GetInstance():GetLogicMgr():GetStoreMgr()
    end
)

function StoreController:DoAwake()
    self.tabs = {}
    self.tabs[EStoreType.One] = self.toggle0
    self.tabs[EStoreType.Tow] = self.toggle1
    self.tabs[EStoreType.Three] = self.toggle2

    self.toggleHandlers = {}
    self.toggleHandlers[EStoreType.One] = self.OnClickCommon
    self.toggleHandlers[EStoreType.Tow] = self.OnClickGenerals
    self.toggleHandlers[EStoreType.Three] = self.OnClickMaterial

    LuaGameManager.GetInstance():GetEventMgr():Register(GameEventID.GE_UPDATE_STORE_DATA,CallbackData(self,self.RefreshPanelData))
    LuaGameManager.GetInstance():GetEventMgr():Register(GameEventID.GE_UPDATE_SHOP_BUY,CallbackData(self,self.ChageSellState))
    LuaNetStoreHandler.InitShopRequestResponse()
end

function StoreController:DoStart()
    self:SelectTabByType(self.storeMgr:GetShopType())
end

function StoreController:DoDestroy()
    LuaGameManager.GetInstance():GetEventMgr():Unregister(GameEventID.GE_UPDATE_STORE_DATA,CallbackData(self,self.RefreshPanelData))
	LuaGameManager.GetInstance():GetEventMgr():Unregister(GameEventID.GE_UPDATE_SHOP_BUY,CallbackData(self,self.ChageSellState))
end

function StoreController:SelectTabByType(shopType)
    local tab = self.tabs[shopType]
    if tab then
        if tab.isOn == true then
            local handle = self.toggleHandlers[shopType]
            if handle then
                handle(self)
            end
        else
            tab.isOn = true
        end
    end
end

function StoreController:ChangeTab(type)
    self.storeMgr:SetShopType(type)
end

function StoreController:OnClickCommon()
    self:ChangeTab(EStoreType.One)
end

function StoreController:OnClickGenerals()
    self:ChangeTab(EStoreType.Tow)
end

function StoreController:OnClickMaterial()
    self:ChangeTab(EStoreType.Three)
end

--刷新按钮
function StoreController:OnClickRefresh()
    LuaNetStoreHandler.RefreshShopRequestResponse()
end

function StoreController:ChageSellState(index)
    local shopData = self.storeMgr:GetShopDataByGrid(index)
    local item = self.scrollController:GetItemByIndex(tonumber(index))
    if item then
        item:SetSellHide(shopData)
    end
end

function StoreController:RefreshPanelData()
    self.free_refresh_num.gameObject:SetActive(false)
    self.refresh:SetActive(false)
    if self.scrollController then
        self.scrollController:SetScrollItemData()
    end
    local refreshPrice = self.storeMgr:GetShopRefreshPrice()
    if refreshPrice > 0 then
        self.refresh:SetActive(true)
        self.price.text = refreshPrice
    else
        self.free_refresh_num.gameObject:SetActive(true)
    end
end

function StoreController:OnClickPanel()
    local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
    uiMgr:ClosePanel("StorePanel",LuaUIPanelLevel.Default)
end
