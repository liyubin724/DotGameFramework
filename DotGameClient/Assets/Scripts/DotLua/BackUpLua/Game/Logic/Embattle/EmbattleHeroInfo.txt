local CS_Unity = CS.UnityEngine
local CS_ObjectHandler = CS.Game.Logic.LogicHandler.ObjectHandler
EmbattleHeroInfo = Class(function(self)
    self.mInit = false
    self.mCamera = nil
    self.mUICamera = nil
    self.mName = nil
    self.mType = nil
    self.mTarget = nil
    self.mOffset = CS_Unity.Vector3(0.5,-0.5,-0.5)
    self.mHeroTrans = nil
    self.embattleMgr = LuaGameManager.GetInstance():GetLogicMgr():GetEmbattleMgr()
    self.groundBehaviour = self.embattleMgr:GetGroundBehaviour()
end)

function EmbattleHeroInfo:DoStart()
    if not self.mInit then
        self:InitObj()
    end
end

function EmbattleHeroInfo:GetGameObject()
    return self.gameObject
end

function EmbattleHeroInfo:SetData(trans,heroId)
    if not self.mInit then
        self:InitObj()
    end
    if not trans or not heroId then
        return
    end
    self.mHeroTrans = trans
    local child = self.mHeroTrans:GetChild(0)
    if child == nil then
        return
    end
    self.mTarget = child:Find("HeadSocket"):GetComponent(typeof(CS_Unity.Transform))
    local targetPos = self.mTarget.position+self.mOffset
    local screenPos = CS_ObjectHandler.WorldPosToScreenLocalPos(self.mCamera,self.mUICamera,self.mParent,targetPos)
    CS_ObjectHandler.SetObjectLocalPosition(self.gameObject,screenPos.x,screenPos.y,0)

    local configMgr = LuaGameManager.GetInstance():GetConfigMgr()
    local heroData = configMgr:GetDataByNameAndID("TeamBase",tostring(heroId))
    if heroData then
        if self.mName then
            self.mName.text = heroData.name
        end
        if self.mType then
            self.mType.SpriteName = EGeneralCorps[heroData.corps]
        end
    end
end

function EmbattleHeroInfo:DoUpdate()
    if not self.mParent then
        return
    end 
    if self.mHeroTrans and self.mTarget == nil then
        local child = self.mHeroTrans:GetChild(0)
        if child == nil then
            return
        end
        self.mTarget = child:Find("HeadSocket"):GetComponent(typeof(CS_Unity.Transform))
    end
    if self.mHeroTrans and self.mTarget then
        local targetPos = self.mTarget.position+self.mOffset
        local screenPos = CS_ObjectHandler.WorldPosToScreenLocalPos(self.mCamera,self.mUICamera,self.mParent,targetPos)
        CS_ObjectHandler.SetObjectLocalPosition(self.gameObject,screenPos.x,screenPos.y,0)
    end
end

function EmbattleHeroInfo:DoDestroy()
    self.mCamera = nil
    self.mUICamera = nil
    self.mName = nil
    self.mType = nil
    self.mTarget = nil
    self.mOffset = nil
    self.mHeroTrans = nil
    self.embattleMgr = nil
end

function EmbattleHeroInfo:DoDispose()
    if self.gameObject then
        CS_Unity.Object.DestroyImmediate(self.gameObject)
    end
end

function EmbattleHeroInfo:InitObj()
    self.mCamera = self.embattleMgr:GetCamera()
    self.mUICamera = self.embattleMgr:GetUICamera()
    self.mParent = self.embattleMgr:GetHeroInfoParent()
    self.mType = self.transform:FindChild("gird/type"):GetComponent(typeof(CS.Game.Core.UGUIEx.UGUIAtlasImage))
    self.mName = self.transform:FindChild("gird/name"):GetComponent(typeof(CS_Unity.UI.Text))
    self.mInit = true
end