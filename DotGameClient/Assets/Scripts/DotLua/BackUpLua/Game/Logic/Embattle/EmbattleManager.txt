require "Game/Logic/Embattle/EmbattleGround"
local CS_PlayerPrefs = CS.UnityEngine.PlayerPrefs
local CS_Unity = CS.UnityEngine
local CS_ObjectHandler = CS.Game.Logic.LogicHandler.ObjectHandler

EmbattleManager = Class(function(self)
    self.HeroList = {10101,10102,10103,10104,10105,10106,10107,10108}
    self.EmbattleHeroList = {}
    for i=1,16 do
        local value = CS_PlayerPrefs.GetInt("Embattle" .. i, -1)
        table.insert(self.EmbattleHeroList,value)
        if value ~= -1 then
            local removeIndex = 0
            for i=1,#self.HeroList do
                if self.HeroList[i] == value then
                    removeIndex = i
                end
            end
            if removeIndex >0 then
                table.remove(self.HeroList,removeIndex)
            end
        end
    end

    self.curSelectHeroIndex = 0

    -- embattle ground
    self.mCamera = nil
    self.mUICamera = nil
    self.mGCenterTrans = nil
    self.mGroundBehaviour = nil
    self.mHeroInfoParent = nil

    self.embattleHeroPos = {x = 2.5,y=0,z=0}
    self.embattleDeaultPos = {
        [1] = {x = 0.2,y=0,z=0},
        [2] = {x = -1.3,y=0,z=1},
        [3] = {x = -2.8,y=0,z=0},
        [4] = {x = 0.5,y=0,z=2},
        [5] = {x = 0.5,y=0,z=-2},
        [6] = {x = -0.8,y=0,z=2.8},
        [7] = {x = -0.8,y=0,z=-2.8},
        [8] = {x = -2.5,y=0,z=2},
        [9] = {x = -2.5,y=0,z=-2},
        [10] = {x = -1.3,y=0,z=-1},
    }
    self.embattleSpecialPos = {
        [1] = {x = 0.2,y=0,z=1},
        [2] = {x = 0.2,y=0,z=-1},
        [3] = {x = -2,y=0,z=0},
        [4] = {x = 0.9,y=0,z=2.5},
        [5] = {x = 0.9,y=0,z=-2.5},
        [6] = {x = -2,y=0,z=2},
        [7] = {x = -2,y=0,z=-2},
    }
end)

--embattle panel
function EmbattleManager:GetCurSelectHeroIndex()
    return self.curSelectHeroIndex
end

function EmbattleManager:SetCurSelectHeroIndex(index)
    self.curSelectHeroIndex = index
end
function EmbattleManager:GetHeroList()
    return self.HeroList
end

function EmbattleManager:GetHeroDataByIndex(index)
    if index > 0 and index <= #self.HeroList then
        return self.HeroList[index]
    end
    return nil
end

function EmbattleManager:AddHeroDataToList(heroId)
    table.insert(self.HeroList,heroId)
    table.sort(self.HeroList)
    local eventMgr = LuaGameManager.GetInstance():GetEventMgr()
    eventMgr:Trigger(GameEventID.GE_UPDATE_EMBATTLE_DATA)
    local gIndex = -1
    for i=1,#self.EmbattleHeroList do
        if self.EmbattleHeroList[i] == heroId then
            gIndex = i
            break
        end
    end
    if gIndex ~= -1 then
        self:UpdateGroundData(gIndex,-1)
    end
end

function EmbattleManager:RemoveHeroDataToList(gIndex,heroId)
    if #self.HeroList <= 0 then
        return
    end
    local removeIndex = -1
    for i=1,#self.HeroList do
        if self.HeroList[i] == heroId then
            removeIndex = i
        end
    end
    if removeIndex > 0 then
        local removeId = table.remove(self.HeroList,removeIndex)
    end
    local eventMgr = LuaGameManager.GetInstance():GetEventMgr()
    eventMgr:Trigger(GameEventID.GE_UPDATE_EMBATTLE_DATA)

    self:UpdateGroundData(gIndex,heroId)
end

function EmbattleManager:UpdateGroundData(gIndex,heroId)
    if gIndex >=1 and gIndex <= #self.EmbattleHeroList  then
        self.EmbattleHeroList[gIndex] = heroId
        self.mGroundBehaviour:UpdateDefaultState()
    end
end

--embattle ground
function EmbattleManager:GetHeroPos()
    return self.embattleHeroPos
end

function EmbattleManager:GetDefaultPos(index)
    return self.embattleDeaultPos[index]
end

function EmbattleManager:GetSpecialPos(index)
    return self.embattleSpecialPos[index]
end

function EmbattleManager:IsAllEmbattle()
    local ec = 0
    for i=1,#self.EmbattleHeroList do
        local d = self.EmbattleHeroList[i]
        if d and d ~= -1 then
            ec = ec +1
        end
    end
    return ec == 8
end

function EmbattleManager:GetGroundHeroData(index)
    if index>= 1 and index<= #self.EmbattleHeroList then
        return self.EmbattleHeroList[index]
    end
    return -1
end


function EmbattleManager:GetCamera()
    if self.mCamera == nil then
        local Unity_Object = CS_Unity.GameObject
        local camRoot = Unity_Object.Find("cam")
        if not camRoot then
            error("EmbattleManager:GetCamera ->cam root is nil")
        end
        self.mCamera = camRoot.transform:Find("Camera_buzhen"):GetComponent(typeof(CS_Unity.Camera))
    end
    if not self.mCamera then
        error("EmbattleManager:GetCamera -> Camera_buzhen is nil")
    end
    return self.mCamera
end

function EmbattleManager:GetUICamera()
    if self.mUICamera == nil then
        local Unity_Object = CS_Unity.GameObject
        self.mUICamera = Unity_Object.Find("CameraUI"):GetComponent(typeof(CS_Unity.Camera))
    end
    if not self.mUICamera then
        error("EmbattleManager:GetUICamera -> UICamera is nil")
    end
    return self.mUICamera
end

function EmbattleManager:GetGroundCenter()
    return self.mGCenterTrans
end

function EmbattleManager:GetGroundBehaviour()
    return self.mGroundBehaviour
end

function EmbattleManager:GetHeroInfoParent()
    return self.mHeroInfoParent.transform
end

-- function EmbattleManager:SetHeroInfoParent(value)
--     self.mHeroInfoParent = value
-- end

function EmbattleManager:CreateHeroInfo()
    local loaderMgr = LuaGameManager.GetInstance():GetLoaderMgr()
    local heroInfoObj = loaderMgr:LoadAssetAndInstantiateGO(GameConstValue.NameEmbattleHeroInfoPath)
    if heroInfoObj then
        heroInfoObj.transform:SetParent(self.mHeroInfoParent.transform,false)
        local behaviour = heroInfoObj:AddComponent(typeof(CS.Game.Logic.Lua.UpdateBehaviour))
        if behaviour then
            return behaviour:CreateLuaInstance("EmbattleHeroInfo","Game/Logic/Embattle/EmbattleHeroInfo")
        end
    end
    return nil
end

--布阵初始化
function EmbattleManager:InitEmbattleGround(heroInfoParent)
    local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
    uiMgr:OpenPanel("EmbattlePanel",GameConstValue.NameUIEmbattlePanelPath,LuaUIPanelLevel.Main,LuaUIPanelRelation.Exclusion)

    self:InitHeroInfoParent()
    local loaderMgr = LuaGameManager.GetInstance():GetLoaderMgr()
    local groundObj = loaderMgr:LoadAssetAndInstantiateGO(GameConstValue.NameEmbattleGroundPath)
    if groundObj then
        local gc = CS_Unity.GameObject("center")
        gc.transform.parent = groundObj.transform
        CS_ObjectHandler.SetObjectLocalPosition(gc,14,15,25)
        self.mGCenterTrans = gc.transform
        self.mGroundBehaviour = EmbattleGround()
        self.mGroundBehaviour:InitObj(groundObj)
    end
end
--布阵关闭
function EmbattleManager:DestroyEmbattleGround()
    self:SaveEmbattleData()
    
    if self.mGroundBehaviour then
        self.mGroundBehaviour:DoDestroy()
        self.mGroundBehaviour = nil
        self.mGCenterTrans = nil
    end
    self.mCamera = nil
    self.mUICamera = nil
    if self.mHeroInfoParent then
        CS_Unity.Object.DestroyImmediate(self.mHeroInfoParent)
        self.mHeroInfoParent = nil
    end

    local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
    uiMgr:ClosePanel("EmbattlePanel",LuaUIPanelLevel.Main)
end

function EmbattleManager:InitHeroInfoParent()
    local loaderMgr = LuaGameManager.GetInstance():GetLoaderMgr()
    self.mHeroInfoParent = loaderMgr:LoadAssetAndInstantiateGO(GameConstValue.NameEmbattleHeroInfoParentPath)
    if not self.mHeroInfoParent then
        error("EmbattleManager->InitHeroInfoParent: hero info parent asset error!")
        return
    end
    local defaultOH = CS_Unity.GameObject.Find("Canvas"):GetComponent(typeof(CS_Unity.Transform))
    if not defaultOH then
        error("EmbattleManager->InitHeroInfoParent: can not find default oh !")
        return
    end
    self.mHeroInfoParent.transform:SetParent(defaultOH,false)
end

function EmbattleManager:SaveEmbattleData()
    for i=1,#self.EmbattleHeroList do
        local data = self.EmbattleHeroList[i]
        if data then
            CS_PlayerPrefs.SetInt("Embattle"..i,data)
        end
    end
end





