local CS_Unity = CS.UnityEngine
local CS_ObjectHandler = CS.Game.Logic.LogicHandler.ObjectHandler
MainUIController = Class(function(self)
    self.dataMgr = LuaGameManager.GetInstance():GetModelMgr()
end)

function MainUIController:DoAwake()
end

function MainUIController:DoStart()
    if not self.dataMgr then
        return
    end

    if self.vip then
        local vipLv = self.dataMgr:GetDataByKeys("vipLevel")
        self.vip.text = vipLv..""
    end
    if self.name then
        local name = self.dataMgr:GetDataByKeys("nickname")
        self.name.text = name..""
    end
    if self.level then
        local lv = self.dataMgr:GetDataByKeys("level")
        self.level.text = "lv."..lv
    end
    self.uiCamera = CS_Unity.GameObject.Find("CameraUI"):GetComponent(typeof(CS_Unity.Camera))
    local buildTrans = CS_Unity.GameObject.Find("build"):GetComponent(typeof(CS_Unity.Transform))
    if buildTrans then
        local build1 = buildTrans:Find("build1")
        if build1 then
            if self.city1 then
                local screenPos = CS_ObjectHandler.WorldPosToScreenLocalPos(CS_Unity.Camera.main,self.uiCamera,self.cityCenter,build1.position)
                CS_ObjectHandler.SetObjectLocalPosition(self.city1,math.floor(screenPos.x),math.floor(screenPos.y),0)
            end
        end

        local build2 = buildTrans:Find("build2")
        if build2 then
            if self.city2 then
                local screenPos = CS_ObjectHandler.WorldPosToScreenLocalPos(CS_Unity.Camera.main,self.uiCamera,self.cityCenter,build2.position)
                CS_ObjectHandler.SetObjectLocalPosition(self.city2,math.floor(screenPos.x),math.floor(screenPos.y),0)
            end
        end

        local build3 = buildTrans:Find("build3")
        if build3 then
            if self.city3 then
                local screenPos = CS_ObjectHandler.WorldPosToScreenLocalPos(CS_Unity.Camera.main,self.uiCamera,self.cityCenter,build3.position)
                CS_ObjectHandler.SetObjectLocalPosition(self.city3,math.floor(screenPos.x),math.floor(screenPos.y),0)
            end
        end
    end
end

function MainUIController:DoShow(data)

end

function MainUIController:DoDestroy()

end

--bottom event
function MainUIController:OnClickBottomBack()

end

function MainUIController:OnCLickBottomPackage()
    print("MainUIController->OnCLickBottomPackage")
    LuaGameManager.GetInstance():GetUIMgr():OpenPanel("PackPanel",GameConstValue.NameUIPackagePanelPath,LuaUIPanelLevel.Default,LuaUIPanelRelation.Exclusion)
end

--商店
function MainUIController:OnStoreClick()
    print("MainUIController->OnStoreClick")
    if GameStatic and GameStatic.closeShop then
        return
    end
    LuaGameManager.GetInstance():GetUIMgr():OpenPanel("StorePanel",GameConstValue.NameUIStorePanelPath,LuaUIPanelLevel.Default,LuaUIPanelRelation.Exclusion)
end

--邮件
function MainUIController:OnMailClick()
    print("MainUIController->OnMailClick")
    LuaGameManager.GetInstance():GetUIMgr():OpenPanel("MailPanel",GameConstValue.NameUIMailPanelPath,LuaUIPanelLevel.Default,LuaUIPanelRelation.Exclusion)
    LuaGameManager.GetInstance():GetEventMgr():Trigger(GameEventID.GE_UPDATE_MAIL_DATA)
end

--武将
function MainUIController:OnCommanderClick()
    print("MainUIController->OnCommanderClick")
    LuaGameManager.GetInstance():GetUIMgr():ClosePanel("MainPanel",LuaUIPanelLevel.Main)
    LuaGameManager.GetInstance():GetUIMgr():OpenPanel("GeneralPanel",GameConstValue.NameUIGeneralPanelPath,LuaUIPanelLevel.Default,LuaUIPanelRelation.Exclusion)
end