require "Game/Core/UI/LoopScroll/LoopScrollItem"

local MailState = {
    eReaded = 1,    --已读
    eNotRead = 2,   --未读
}

--TODO：需要读translate
local strReaded = "已读"
local strNotRead = "未读"

MailListItem = Class(LoopScrollItem,function(self)
    self.index = 0
end)

function MailListItem:OnClickItem()
    local mailMgr = LuaGameManager.GetInstance():GetLogicMgr():GetMailMgr()
    local mailCount = mailMgr:GetMailTotalCount()
    if self.index > mailCount then
        return 
    end
    local selectIndex = mailMgr:GetSelectIndex()
    if selectIndex~=self.index then
        mailMgr:RecordSelectIndex(self.index)
        if self.loopScroll then
            self.loopScroll.SelectIndex = self.index-1
        end
    end
    LuaGameManager.GetInstance():GetEventMgr():Trigger(GameEventID.GE_SELECT_MAIL)
    print("maillistitem onclickitem", self.index)
end
--设置显示数据
function MailListItem:SetItemData(index)
    local mailMgr = LuaGameManager.GetInstance():GetLogicMgr():GetMailMgr()
    local mailCount = mailMgr:GetMailTotalCount()
    self.index = index
    --如果非邮件显示底板
    local mailData = nil
    if index <= mailCount then
        local mailMgr = LuaGameManager.GetInstance():GetLogicMgr():GetMailMgr()
        mailData = mailMgr:GetMailByIndex(index)
    end
    self:RefreshMailData(mailData)
    --TODO:默认选中第一个（临时解决方案，后续会在c#中加入加载完回调，解决初始化选中问题）
    if 0 < mailCount then
        local mailMgr = LuaGameManager.GetInstance():GetLogicMgr():GetMailMgr()
        local selectIndex = mailMgr:GetSelectIndex()
        if selectIndex > 0 and selectIndex<mailCount then
            if self.index == selectIndex then
                self:OnClickItem()
                if self.selectImg then
                    self.selectImg:SetActive(true)
                end
            end
        else
            if index == 1 then
                self:OnClickItem()
                if self.selectImg then
                    self.selectImg:SetActive(true)
                end
            end
        end
    end
end
--刷新item
function MailListItem:RefreshMailData(mailData)
    if mailData then
        local mailMgr = LuaGameManager.GetInstance():GetLogicMgr():GetMailMgr()
        local mailConfig = mailMgr:GetMailConfigByIndex(self.index)
        self.mailName.text =  mailConfig.title
        local bReward = #mailData.rewards > 0
        self.mailIcon:SetActive(not mailData.read and not bReward)
        self.sighImg:SetActive(not mailData.read and bReward)
        self.readedIcon:SetActive(mailData.read)
        if mailData.read then
            self.conditionText.text = strReaded
        else
            self.conditionText.text = strNotRead
        end
    else
        self:ClearPanel()
    end

end

function MailListItem:ClearPanel()
    self.lightImg:SetActive(false)
    self.mailIcon:SetActive(false)
    self.mailDarkIcon:SetActive(true)
    self.readedIcon:SetActive(false)
    self.mailName.text = ""
    self.sighImg:SetActive(false)
    self.conditionText.text = ""
    self.selectImg:SetActive(false)
end

function MailListItem:SetSelect(clickIndex)
    local bSelect = clickIndex==self.index
    self.selectImg:SetActive(bSelect)
end