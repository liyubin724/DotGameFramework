local CS_Prefs = CS.UnityEngine.PlayerPrefs
require "Global/LuaNetMessageDef"
require "Global/GameEventID"
require "Game/Logic/Package/PackageManager"
require "Game/Logic/Congratulation/CongratulationManager"
require "Game/Logic/Confirm/ConfirmManager"
require "Game/Logic/Store/StoreManager"
require "Game/Logic/Chapter/LuaChapterManager"
-- require "Game/Logic/Common/CommonBuyManager"
require "Game/Logic/Mail/MailManager"
require "Game/Logic/Compound/CompoundManager"
require "Game/Logic/Batch/BatchManager"
require "Game/Logic/SelectreWard/SelectreWardManager"
require "Game/Logic/Embattle/EmbattleManager"
require "Game/Logic/General/GeneralManager"
require "Game/Logic/SkillTips/SkillTipsManager"

LuaLogicManager = Class(function(self)
    self.packMgr = PackageManager()
    self.congratulationMgr = CongratulationManager()
    self.confirmMgr = ConfirmManager()
    self.storeMgr = StoreManager()
    self.chapterMgr = LuaChapterManager()
    self.mailMgr = MailManager()
    self.compoundMgr = CompoundManager()
    self.batchMgr = BatchManager()
    self.selectreWard = SelectreWardManager()
    self.generalManager = GeneralManager()
    self.embattleMgr = EmbattleManager()
    self.skillTipsManager = SkillTipsManager()

    LuaGameManager.GetInstance():GetEventMgr():Register(LuaEventCode.NetConnectEvent,CallbackData(self,self.DoNetConnected))
end)

--private--
function LuaLogicManager:DoReset()

end

function LuaLogicManager:DoDispose()
    self:DoGameEnd()
end

function LuaLogicManager:DoGameStart()
  local loadingMgr = LuaGameManager.GetInstance():GetLoadingMgr()
  loadingMgr:ChangeScene("MainScene",nil,CallbackData(self,self.DoStartEnd))
end

function LuaLogicManager:DoStartEnd()
    self.rid = CS_Prefs.GetString("account",tostring(os.time()))
    self.version = 123
    print("rid->"..self.rid)
    LuaGameManager.GetInstance():GetNetMgr():Connect("172.16.136.86",8889,LuaNetType.Game)
end

function LuaLogicManager:DoGameEnd()
    LuaGameManager.GetInstance():GetEventMgr():Unregister(LuaEventCode.NetConnectEvent,CallbackData(self,self.DoNetConnected))
end

function LuaLogicManager:DoNetConnected(cobj,netType,isFirstConnect)
    local serverRid = self.rid.."_1"
    local headerStr = string.char(string.len(self.version))..self.version..string.char(string.len(serverRid))..serverRid
    LuaGameManager.GetInstance():GetNetMgr():SetMsgHeader(headerStr)
    local commonTable = {OS="ImKiD",frontMobile="pJbL",replaced=false,backendMobile="Dnv",deviceId="lr"}
    LuaGameManager.GetInstance():GetNetMgr():SetMsgCommonData(commonTable)

    local onLogin = function(err,dataTable)
        if self.rid and self.rid ~= 0 then
          CS_Prefs.SetString("account",self.rid)
        end
        local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
        uiMgr:OpenPanel("MainPanel",GameConstValue.NameUIMainPanelPath,LuaUIPanelLevel.Main,LuaUIPanelRelation.Exclusion)
        LuaGameManager.GetInstance():GetModelMgr():SetModelEvents(GameModelEventID)
    end
    LuaGameManager.GetInstance():GetNetMgr():RequestWithTable(LuaNetMessageDef.ID_GAME_LOGIN_REQUEST,{rid = serverRid},onLogin,LuaNetType.Game)
end

--public-- 
--获取背包Manager
function LuaLogicManager:GetPackMgr()
  return self.packMgr
end

--获取奖励展示Manager
function LuaLogicManager:GetCongratulationMgr()
  return self.congratulationMgr
end

--获取确认界面Manager
function LuaLogicManager:GetConfirmMgr()
  return self.confirmMgr
end

--获取商店Manager
function LuaLogicManager:GetStoreMgr()
    return self.storeMgr
end

--获取关卡Manager
function LuaLogicManager:GetChapterMgr()
    return self.chapterMgr
end

--获取布阵Manager
function LuaLogicManager:GetEmbattleMgr()
    return self.embattleMgr
end

--获取邮件道具Manager
function LuaLogicManager:GetMailMgr()
    return self.mailMgr
end

--获取合成道具Manager
function LuaLogicManager:GetCompoundMgr()
    return self.compoundMgr
end

--获取批量道具Manager
function LuaLogicManager:GetBatchMgr()
    return self.batchMgr
end

--获取多选道具Manager
function LuaLogicManager:GetSelectreWardMgr()
    return self.selectreWard
end

--获取武将养成Manager
function LuaLogicManager:GetGeneralMgr()
     return self.generalManager
end

--获取技能弹框Manager
function LuaLogicManager:GetSkillTipsMgr()
    return self.skillTipsManager
end