CompoundManager = Class(function(self)
    self._itemId = 0
    self._itemCount = 0
    self._itemData = nil
    self._fragmentData = nil
end)

--private func
function CompoundManager:DoReset()
    self._itemId = 0
    self._itemCount = 0
    self._itemData = nil
    self._fragmentData = nil

end

function CompoundManager:DoDispose()
    self._itemId = nil
    self._itemCount = nil
    self._itemData = nil
    self._fragmentData = nil
end

--public func
function CompoundManager:OnReceiveData(itemId,count)
    if not itemId then
        return
    end
    if self._itemId ~= itemId then
        self._itemId = itemId
    end
    self._itemCount = count or 1

    local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
    uiMgr:OpenPanel("CompoundPanel",GameConstValue.NameUICompoundPanelPath,LuaUIPanelLevel.Top,LuaUIPanelRelation.Exclusion)
end

function CompoundManager:GetItemData()
    local configMgr = LuaGameManager.GetInstance():GetConfigMgr()
    self._itemData = configMgr:GetDataByNameAndID("Item", tostring(self._itemId))
    if self._itemData then
        return self._itemData
    else
        error("CompoundManager->SetData: error id "..self._itemId)
    end
end

--合成的道具数据
function CompoundManager:GetFragmentData()
    self._fragmentId = self._itemData.fragmentID
    if self._fragmentId then
        local configMgr = LuaGameManager.GetInstance():GetConfigMgr()
        local itemData = configMgr:GetDataByNameAndID("Item", tostring(self._fragmentId["tag"]))
        if itemData then
            return itemData
        end
    else
        error("CompoundManager->GetFragmentData: error fragmentId ")
    end
    return nil
end

function CompoundManager:GetItemFragmentCount()
    
end

--所需碎片数量
function CompoundManager:GetNeedFragmentNum1()
    if self._fragmentId and self._fragmentId["num1"] then
        return self._fragmentId["num1"] 
    end
    return 0
end

--合成后道具数量
function CompoundManager:GetNeedFragmentNum2()
    if self._fragmentId and self._fragmentId["num2"]  then
        return self._fragmentId["num2"] 
    end
    return 0
end

function CompoundManager:GetItemId()
    return self._itemId
end

function CompoundManager:GetItemCount()
    return self._itemCount
end

function CompoundManager:Confirm(count)
    LuaNetPackHandler.CompoundItemRequestResponse(self._itemId, count)
    local uiMgr = LuaGameManager.GetInstance():GetUIMgr()
    uiMgr:ClosePanel("CompoundPanel",LuaUIPanelLevel.Top)
end