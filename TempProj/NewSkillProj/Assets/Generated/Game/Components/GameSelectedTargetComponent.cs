//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SelectedTargetComponent selectedTarget { get { return (SelectedTargetComponent)GetComponent(GameComponentsLookup.SelectedTarget); } }
    public bool hasSelectedTarget { get { return HasComponent(GameComponentsLookup.SelectedTarget); } }

    public void AddSelectedTarget(int newEntityID) {
        var index = GameComponentsLookup.SelectedTarget;
        var component = (SelectedTargetComponent)CreateComponent(index, typeof(SelectedTargetComponent));
        component.entityID = newEntityID;
        AddComponent(index, component);
    }

    public void ReplaceSelectedTarget(int newEntityID) {
        var index = GameComponentsLookup.SelectedTarget;
        var component = (SelectedTargetComponent)CreateComponent(index, typeof(SelectedTargetComponent));
        component.entityID = newEntityID;
        ReplaceComponent(index, component);
    }

    public void RemoveSelectedTarget() {
        RemoveComponent(GameComponentsLookup.SelectedTarget);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSelectedTarget;

    public static Entitas.IMatcher<GameEntity> SelectedTarget {
        get {
            if (_matcherSelectedTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SelectedTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSelectedTarget = matcher;
            }

            return _matcherSelectedTarget;
        }
    }
}
