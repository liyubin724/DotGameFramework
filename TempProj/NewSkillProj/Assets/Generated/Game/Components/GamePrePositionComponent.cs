//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PrePositionComponent prePosition { get { return (PrePositionComponent)GetComponent(GameComponentsLookup.PrePosition); } }
    public bool hasPrePosition { get { return HasComponent(GameComponentsLookup.PrePosition); } }

    public void AddPrePosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.PrePosition;
        var component = (PrePositionComponent)CreateComponent(index, typeof(PrePositionComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePrePosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.PrePosition;
        var component = (PrePositionComponent)CreateComponent(index, typeof(PrePositionComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePrePosition() {
        RemoveComponent(GameComponentsLookup.PrePosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPrePosition;

    public static Entitas.IMatcher<GameEntity> PrePosition {
        get {
            if (_matcherPrePosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PrePosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPrePosition = matcher;
            }

            return _matcherPrePosition;
        }
    }
}
