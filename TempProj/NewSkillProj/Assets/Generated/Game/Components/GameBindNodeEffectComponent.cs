//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BindNodeEffectComponent bindNodeEffect { get { return (BindNodeEffectComponent)GetComponent(GameComponentsLookup.BindNodeEffect); } }
    public bool hasBindNodeEffect { get { return HasComponent(GameComponentsLookup.BindNodeEffect); } }

    public void AddBindNodeEffect(int newNodeIndex, BindNodeType newNodeType) {
        var index = GameComponentsLookup.BindNodeEffect;
        var component = (BindNodeEffectComponent)CreateComponent(index, typeof(BindNodeEffectComponent));
        component.nodeIndex = newNodeIndex;
        component.nodeType = newNodeType;
        AddComponent(index, component);
    }

    public void ReplaceBindNodeEffect(int newNodeIndex, BindNodeType newNodeType) {
        var index = GameComponentsLookup.BindNodeEffect;
        var component = (BindNodeEffectComponent)CreateComponent(index, typeof(BindNodeEffectComponent));
        component.nodeIndex = newNodeIndex;
        component.nodeType = newNodeType;
        ReplaceComponent(index, component);
    }

    public void RemoveBindNodeEffect() {
        RemoveComponent(GameComponentsLookup.BindNodeEffect);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBindNodeEffect;

    public static Entitas.IMatcher<GameEntity> BindNodeEffect {
        get {
            if (_matcherBindNodeEffect == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BindNodeEffect);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBindNodeEffect = matcher;
            }

            return _matcherBindNodeEffect;
        }
    }
}
